
==================== FINAL INTERFACE ====================
2016-07-28 17:18:21.401314 UTC

interface main@main:InshiNoHeya 7103
  interface hash: 2eb473cacfd62c740d396b0051e6a6f0
  ABI hash: db9810054ba6911789c673064978cf3c
  export-list hash: eae13dc9132efafe4b13e868357ea9d1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1ba42ae73d0b95f43952688546ccbfaa
  sig of: Nothing
  used TH splices: False
  where
exports:
  InshiNoHeya.checkProduct
  InshiNoHeya.checkPuzzle
  InshiNoHeya.epsilons
  InshiNoHeya.getValue
  InshiNoHeya.main
  InshiNoHeya.movesToPuzzle
  InshiNoHeya.optimalPlay
  InshiNoHeya.p
  InshiNoHeya.prettyPrint
  InshiNoHeya.rooms
  InshiNoHeya.valid
  InshiNoHeya.Coordinate
  InshiNoHeya.Move
  InshiNoHeya.Position
  InshiNoHeya.Product
  InshiNoHeya.Puzzle
  InshiNoHeya.R
  InshiNoHeya.Room{InshiNoHeya.Room}
  InshiNoHeya.Value
module dependencies: GameLogic
package dependencies: base-4.8.2.0 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  GameLogic 0b53a799af830780d41d4547bedd253d
  exports: 317b64144625346fcdfb42c1fb88af54
  J d7de4bb8c2cf07d476f757e42c973f23
  bigotimes 0390703f8b24ec89a7aaa580f2c54eac
  find 19473f3b700cd7a01ba9465996d293bf
  setMinus 4ad413d40cc9382bca94a4a68753d099
41026d87b9206de531571105afaba633
  $fEqRoom :: GHC.Classes.Eq InshiNoHeya.Room
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InshiNoHeya.Room
                  InshiNoHeya.$fEqRoom_$c==
                  InshiNoHeya.$fEqRoom_$c/= -}
41026d87b9206de531571105afaba633
  $fEqRoom_$c/= ::
    InshiNoHeya.Room -> InshiNoHeya.Room -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ a1 :: InshiNoHeya.Room b :: InshiNoHeya.Room ->
                 case InshiNoHeya.$fEqRoom_$c== a1 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41026d87b9206de531571105afaba633
  $fEqRoom_$c== ::
    InshiNoHeya.Room -> InshiNoHeya.Room -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: InshiNoHeya.Room w1 :: InshiNoHeya.Room ->
                 case w of ww { InshiNoHeya.Room ww1 ww2 ->
                 case w1 of ww3 { InshiNoHeya.Room ww4 ww5 ->
                 InshiNoHeya.$w$c== ww1 ww2 ww4 ww5 } }) -}
41026d87b9206de531571105afaba633
  $fShowRoom :: GHC.Show.Show InshiNoHeya.Room
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InshiNoHeya.Room
                  InshiNoHeya.$fShowRoom_$cshowsPrec
                  InshiNoHeya.$fShowRoom_$cshow
                  InshiNoHeya.$fShowRoom_$cshowList -}
41026d87b9206de531571105afaba633
  $fShowRoom1 :: InshiNoHeya.Room -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: InshiNoHeya.Room w1 :: GHC.Base.String ->
                 case w of ww { InshiNoHeya.Room ww1 ww2 ->
                 InshiNoHeya.$w$cshowsPrec 0 ww1 ww2 w1 }) -}
a636d475bdb50b87865fe943c69ecbe2
  $fShowRoom2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Room "#) -}
8da6941d8fec8fee555ce5b45a174133
  $fShowRoom3 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ w3 :: (GHC.Types.Int, GHC.Types.Int)
                   w4 :: GHC.Base.String[OneShot] ->
                 case w3 of ww { (,) ww1 ww2 ->
                 GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows9
                   (case ww1 of ww4 { GHC.Types.I# ww3 ->
                    case GHC.Show.$wshowSignedInt
                           0
                           ww3
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showList__1
                              (GHC.Show.$fShow(,)_$sgo
                                 (\ w2 :: GHC.Base.String ->
                                  case ww2 of ww5 { GHC.Types.I# ww6 ->
                                  case GHC.Show.$wshowSignedInt 0 ww6 w2 of ww7 { (#,#) ww8 ww9 ->
                                  GHC.Types.: @ GHC.Types.Char ww8 ww9 } })
                                 (GHC.Types.[] @ GHC.Show.ShowS)
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.shows8
                                    w4))) of ww5 { (#,#) ww6 ww7 ->
                    GHC.Types.: @ GHC.Types.Char ww6 ww7 } }) }) -}
41026d87b9206de531571105afaba633
  $fShowRoom_$cshow :: InshiNoHeya.Room -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ x2 :: InshiNoHeya.Room ->
                 InshiNoHeya.$fShowRoom_$cshowsPrec
                   GHC.Show.shows18
                   x2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41026d87b9206de531571105afaba633
  $fShowRoom_$cshowList :: [InshiNoHeya.Room] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InshiNoHeya.Room
                   InshiNoHeya.$fShowRoom1) -}
41026d87b9206de531571105afaba633
  $fShowRoom_$cshowsPrec ::
    GHC.Types.Int -> InshiNoHeya.Room -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U(1*U,1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: InshiNoHeya.Room
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { InshiNoHeya.Room ww3 ww4 ->
                 InshiNoHeya.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
d909e34d11168b610624a2e50259a2c2
  $w$c== ::
    [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
    -> InshiNoHeya.Product
    -> [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
    -> InshiNoHeya.Product
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ ww :: [(InshiNoHeya.Coordinate,
                           InshiNoHeya.Coordinate)]
                   ww1 :: InshiNoHeya.Product
                   ww2 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
                   ww3 :: InshiNoHeya.Product ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                        GHC.Arr.$fIx(,)_$s$fEq(,)
                        ww
                        ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Classes.eqInt ww1 ww3 }) -}
71f49703b1592f980266de71202a549f
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
    -> InshiNoHeya.Product
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <L,U><L,1*U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
                   ww2 :: InshiNoHeya.Product
                   w :: GHC.Base.String ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x2 :: GHC.Base.String[OneShot] ->
                     GHC.Show.showList__
                       @ (GHC.Types.Int, GHC.Types.Int)
                       InshiNoHeya.$fShowRoom3
                       ww1
                       (GHC.Types.:
                          @ GHC.Types.Char
                          GHC.Show.showSpace1
                          (case ww2 of ww3 { GHC.Types.I# ww4 ->
                           case GHC.Show.$wshowSignedInt 11 ww4 x2 of ww5 { (#,#) ww6 ww7 ->
                           GHC.Types.: @ GHC.Types.Char ww6 ww7 } }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char InshiNoHeya.$fShowRoom2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           InshiNoHeya.$fShowRoom2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w))) }) -}
d245e412bd65b3173a001c0a97f55730
  $wgetValue ::
    InshiNoHeya.Coordinate
    -> InshiNoHeya.Coordinate
    -> InshiNoHeya.Puzzle
    -> InshiNoHeya.Value
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><S,1*U>, Inline: [0],
     Unfolding: (\ ww :: InshiNoHeya.Coordinate
                   ww1 :: InshiNoHeya.Coordinate
                   w :: InshiNoHeya.Puzzle ->
                 case w of wild {
                   [] -> GHC.Err.undefined @ InshiNoHeya.Value
                   : ipv ipv1
                   -> letrec {
                        go :: [(InshiNoHeya.Coordinate,
                                InshiNoHeya.Coordinate,
                                InshiNoHeya.Value)]
                              -> Data.Monoid.First
                                   (InshiNoHeya.Coordinate,
                                    InshiNoHeya.Coordinate,
                                    InshiNoHeya.Value)
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ ds :: [(InshiNoHeya.Coordinate,
                                    InshiNoHeya.Coordinate,
                                    InshiNoHeya.Value)] ->
                          case ds of wild1 {
                            []
                            -> (GHC.Base.Nothing
                                  @ (InshiNoHeya.Coordinate,
                                     InshiNoHeya.Coordinate,
                                     InshiNoHeya.Value))
                                 `cast`
                               (Sym (Data.Monoid.NTCo:First[0]) <(InshiNoHeya.Coordinate,
                                                                  InshiNoHeya.Coordinate,
                                                                  InshiNoHeya.Value)>_N)
                            : y ys
                            -> case y of wild2 { (,,) x' y' ds1 ->
                               case ww of wild3 { GHC.Types.I# x2 ->
                               case x' of wild4 { GHC.Types.I# y1 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# x2 y1) of wild5 {
                                 GHC.Types.False -> go ys
                                 GHC.Types.True
                                 -> case ww1 of wild6 { GHC.Types.I# x3 ->
                                    case y' of wild7 { GHC.Types.I# y2 ->
                                    case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.==# x3 y2) of wild8 {
                                      GHC.Types.False -> go ys
                                      GHC.Types.True
                                      -> (GHC.Base.Just
                                            @ (InshiNoHeya.Coordinate,
                                               InshiNoHeya.Coordinate,
                                               InshiNoHeya.Value)
                                            wild2)
                                           `cast`
                                         (Sym (Data.Monoid.NTCo:First[0]) <(InshiNoHeya.Coordinate,
                                                                            InshiNoHeya.Coordinate,
                                                                            InshiNoHeya.Value)>_N) } } } } } } } }
                      } in
                      case (go wild)
                             `cast`
                           (Data.Monoid.NTCo:First[0] <(InshiNoHeya.Coordinate,
                                                        InshiNoHeya.Coordinate,
                                                        InshiNoHeya.Value)>_N) of wild1 {
                        GHC.Base.Nothing
                        -> case GHC.Err.undefined ret_ty InshiNoHeya.Value of {}
                        GHC.Base.Just v -> case v of wild2 { (,,) ds ds1 v1 -> v1 } } }) -}
e3425b5cdef47e9a256ed49df7256649
  $wxs ::
    GHC.Prim.Int#
    -> (# [InshiNoHeya.Move]
          -> GameLogic.J InshiNoHeya.R InshiNoHeya.Move,
          [[InshiNoHeya.Move]
           -> GameLogic.J InshiNoHeya.R InshiNoHeya.Move] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
74e8593e3e41b34d976a9078790feef1
  $wxs1 :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
8adef86a10e888a4b16f6d2e65965512
  type Coordinate = GHC.Types.Int
d47fd6fa4f586a78341dfe923dc3d2c0
  type Move = [InshiNoHeya.Value]
accc92fcedaa794bd77829d4e8141e2f
  type Position =
    (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate, InshiNoHeya.Value)
f25fb2e830436fe16ce4ec452263ea06
  type Product = GHC.Types.Int
63b1583db57ca0ae5aa01b06f34942f8
  type Puzzle = [InshiNoHeya.Position]
348f68e10e23cfcf3b14f26c9f248879
  type R = GHC.Types.Bool
41026d87b9206de531571105afaba633
  data Room
    = Room [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
           InshiNoHeya.Product
a7eadb9c120d1f31c36ce87db669eee0
  type Value = GHC.Types.Int
97d91063a0615e65dd86515dbb0c78fc
  checkProduct ::
    [InshiNoHeya.Room] -> InshiNoHeya.Puzzle -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ rs :: [InshiNoHeya.Room] ps :: InshiNoHeya.Puzzle ->
                 letrec {
                   $wgo :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
                           -> GHC.Prim.Int# -> GHC.Prim.Int#
                     {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
                   = \ w :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
                       ww :: GHC.Prim.Int# ->
                     case w of wild {
                       [] -> ww
                       : y ys
                       -> case y of ww1 { (,) ww2 ww3 ->
                          case InshiNoHeya.$wgetValue
                                 ww2
                                 ww3
                                 ps of wild1 { GHC.Types.I# y1 ->
                          $wgo ys (GHC.Prim.*# ww y1) } } }
                 } in
                 letrec {
                   go :: [InshiNoHeya.Room] -> GHC.Types.Bool -> GHC.Types.Bool
                     {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ ds :: [InshiNoHeya.Room] eta :: GHC.Types.Bool ->
                     case ds of wild {
                       [] -> eta
                       : y ys
                       -> case y of wild1 { InshiNoHeya.Room cs prod ->
                          case eta of wild2 {
                            GHC.Types.False -> go ys GHC.Types.False
                            GHC.Types.True
                            -> case $wgo cs 1 of ww { DEFAULT ->
                               case prod of wild3 { GHC.Types.I# y1 ->
                               go
                                 ys
                                 (GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# ww y1)) } } } } }
                 } in
                 go rs GHC.Types.True) -}
8efb6db3f9316e91898729db3cd55f48
  checkPuzzle :: InshiNoHeya.Puzzle -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ xs :: InshiNoHeya.Puzzle ->
                 letrec {
                   go :: [InshiNoHeya.Coordinate] -> [[InshiNoHeya.Value]]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ ds :: [InshiNoHeya.Coordinate] ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ [InshiNoHeya.Value]
                       : y ys
                       -> GHC.Types.:
                            @ [InshiNoHeya.Value]
                            (letrec {
                               go1 :: [(InshiNoHeya.Coordinate,
                                        InshiNoHeya.Coordinate,
                                        InshiNoHeya.Value)]
                                      -> [GHC.Types.Int]
                                 {- Arity: 1, Strictness: <S,1*U> -}
                               = \ ds1 :: [(InshiNoHeya.Coordinate,
                                            InshiNoHeya.Coordinate,
                                            InshiNoHeya.Value)] ->
                                 case ds1 of wild1 {
                                   [] -> GHC.Types.[] @ GHC.Types.Int
                                   : y1 ys1
                                   -> case y1 of wild2 { (,,) ds2 y' ds3 ->
                                      case y' of wild3 { GHC.Types.I# x2 ->
                                      case y of wild4 { GHC.Types.I# y2 ->
                                      case GHC.Prim.tagToEnum#
                                             @ GHC.Types.Bool
                                             (GHC.Prim.==# x2 y2) of wild5 {
                                        GHC.Types.False -> go1 ys1
                                        GHC.Types.True
                                        -> GHC.Types.: @ GHC.Types.Int ds3 (go1 ys1) } } } } }
                             } in
                             Data.OldList.sortBy
                               @ InshiNoHeya.Value
                               GHC.Classes.compareInt
                               (go1 xs))
                            (go ys) }
                 } in
                 case (InshiNoHeya.checkPuzzle_go1 (go InshiNoHeya.checkPuzzle1))
                        `cast`
                      (Data.Monoid.NTCo:All[0]) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> letrec {
                        go1 :: [InshiNoHeya.Coordinate] -> [[InshiNoHeya.Value]]
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ ds :: [InshiNoHeya.Coordinate] ->
                          case ds of wild1 {
                            [] -> GHC.Types.[] @ [InshiNoHeya.Value]
                            : y ys
                            -> GHC.Types.:
                                 @ [InshiNoHeya.Value]
                                 (letrec {
                                    go2 :: [(InshiNoHeya.Coordinate,
                                             InshiNoHeya.Coordinate,
                                             InshiNoHeya.Value)]
                                           -> [GHC.Types.Int]
                                      {- Arity: 1, Strictness: <S,1*U> -}
                                    = \ ds1 :: [(InshiNoHeya.Coordinate,
                                                 InshiNoHeya.Coordinate,
                                                 InshiNoHeya.Value)] ->
                                      case ds1 of wild2 {
                                        [] -> GHC.Types.[] @ GHC.Types.Int
                                        : y1 ys1
                                        -> case y1 of wild3 { (,,) x' ds2 ds3 ->
                                           case x' of wild4 { GHC.Types.I# x2 ->
                                           case y of wild5 { GHC.Types.I# y2 ->
                                           case GHC.Prim.tagToEnum#
                                                  @ GHC.Types.Bool
                                                  (GHC.Prim.==# x2 y2) of wild6 {
                                             GHC.Types.False -> go2 ys1
                                             GHC.Types.True
                                             -> GHC.Types.: @ GHC.Types.Int ds3 (go2 ys1) } } } } }
                                  } in
                                  Data.OldList.sortBy
                                    @ InshiNoHeya.Value
                                    GHC.Classes.compareInt
                                    (go2 xs))
                                 (go1 ys) }
                      } in
                      (InshiNoHeya.checkPuzzle_go (go1 InshiNoHeya.checkPuzzle1))
                        `cast`
                      (Data.Monoid.NTCo:All[0]) }) -}
94dd856b25f5f966fd3adbee3d0e78b6
  checkPuzzle1 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1 5) -}
f91088757d2fb31f1c6d686a706ac078
  checkPuzzle_go :: [[InshiNoHeya.Value]] -> Data.Monoid.All
  {- Arity: 1, Strictness: <S,1*U> -}
36789cbd822d0f7bce2bb42062faa3fd
  checkPuzzle_go1 :: [[InshiNoHeya.Value]] -> Data.Monoid.All
  {- Arity: 1, Strictness: <S,1*U> -}
504bb4c762d132accfea71b57285bb8c
  epsilons ::
    [[InshiNoHeya.Move] -> GameLogic.J InshiNoHeya.R InshiNoHeya.Move]
  {- Unfolding: (case InshiNoHeya.$wxs 5 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ ([InshiNoHeya.Move]
                      -> GameLogic.J InshiNoHeya.R InshiNoHeya.Move)
                   ww1
                   ww2 }) -}
18c2bb2d53b7de90a651b0c7253f8844
  getValue ::
    (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
    -> InshiNoHeya.Puzzle -> InshiNoHeya.Value
  {- Arity: 2, Strictness: <S,1*U(U(U),U(U))><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   w1 :: InshiNoHeya.Puzzle ->
                 case w of ww { (,) ww1 ww2 ->
                 InshiNoHeya.$wgetValue ww1 ww2 w1 }) -}
ef8b800217eb86b1e56389edbc9e8bfe
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                InshiNoHeya.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
64b9640aca4595dc39e20d7f6856494a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (InshiNoHeya.prettyPrint InshiNoHeya.optimalPlay)
                   GHC.Types.True
                   eta) -}
9877763cf0572e41db228505cdffc85f
  movesToPuzzle :: [InshiNoHeya.Move] -> InshiNoHeya.Puzzle
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x2 :: [InshiNoHeya.Move] ->
                 GHC.List.zip3
                   @ InshiNoHeya.Coordinate
                   @ InshiNoHeya.Coordinate
                   @ InshiNoHeya.Value
                   InshiNoHeya.p_xs
                   InshiNoHeya.p_ys
                   (Control.Parallel.Strategies.$sconcat @ GHC.Types.Int x2)) -}
2fd7dc34df38d9785be86392c021f1eb
  optimalPlay :: [InshiNoHeya.Move]
  {- Unfolding: (InshiNoHeya.optimalPlay1 InshiNoHeya.p) -}
5086d7b17f5124094d0d99b6db47e855
  optimalPlay1 :: GameLogic.J InshiNoHeya.R [InshiNoHeya.Move]
  {- Unfolding: (GameLogic.bigotimes
                   @ InshiNoHeya.Move
                   @ InshiNoHeya.R
                   InshiNoHeya.epsilons) -}
2d3bc1dcbe5b133166c2497a61f52f4e
  p :: [InshiNoHeya.Move] -> InshiNoHeya.R
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ ms :: [InshiNoHeya.Move] ->
                 let {
                   puzzle :: InshiNoHeya.Puzzle
                   = GHC.List.zip3
                       @ InshiNoHeya.Coordinate
                       @ InshiNoHeya.Coordinate
                       @ InshiNoHeya.Value
                       InshiNoHeya.p_xs
                       InshiNoHeya.p_ys
                       (Control.Parallel.Strategies.$sconcat @ GHC.Types.Int ms)
                 } in
                 case InshiNoHeya.checkPuzzle puzzle of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> InshiNoHeya.checkProduct InshiNoHeya.rooms puzzle }) -}
af008f54d5037c77fbcd0203cfa28704
  p1 :: ([InshiNoHeya.Coordinate], [InshiNoHeya.Coordinate])
  {- Unfolding: (InshiNoHeya.p_go 1) -}
70ea6cc404aadc09577c00e869c7b4c7
  p_go ::
    GHC.Prim.Int#
    -> ([InshiNoHeya.Coordinate], [InshiNoHeya.Coordinate])
  {- Arity: 1, Strictness: <L,U> -}
695873d32878d927c21af964fc115841
  p_xs :: [InshiNoHeya.Coordinate]
  {- Unfolding: (case InshiNoHeya.p1 of wild { (,) xs ys -> xs }) -}
fbd23b3dd787c5bde560b582534e0c4b
  p_ys :: [InshiNoHeya.Coordinate]
  {- Unfolding: (case InshiNoHeya.p1 of wild { (,) xs ys -> ys }) -}
ff163be72a94ecb3fb1bbf1f88f9125d
  prettyPrint :: [InshiNoHeya.Move] -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ ms :: [InshiNoHeya.Move] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   InshiNoHeya.prettyPrint_divider
                   (case GHC.Base.map
                           @ [InshiNoHeya.Value]
                           @ [GHC.Types.Char]
                           InshiNoHeya.prettyPrint1
                           ms of wild {
                      [] -> InshiNoHeya.prettyPrint_divider
                      : x2 xs1
                      -> GHC.Base.++
                           @ GHC.Types.Char
                           (Data.OldList.intercalate_$spoly_go
                              @ GHC.Types.Char
                              x2
                              (Data.OldList.prependToAll
                                 @ [GHC.Types.Char]
                                 InshiNoHeya.prettyPrint_divider
                                 xs1))
                           InshiNoHeya.prettyPrint_divider })) -}
4cb2913b6888180fed5adb3169fb0ebd
  prettyPrint1 :: [InshiNoHeya.Value] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ x2 :: [InshiNoHeya.Value] ->
                 GHC.CString.unpackAppendCString#
                   "| "#
                   (case GHC.Base.map
                           @ GHC.Types.Int
                           @ [GHC.Types.Char]
                           GHC.Show.$fShowInt_$cshow
                           x2 of wild {
                      [] -> InshiNoHeya.prettyPrint3
                      : x3 xs1
                      -> GHC.Base.++
                           @ GHC.Types.Char
                           (Data.OldList.intercalate_$spoly_go
                              @ GHC.Types.Char
                              x3
                              (Data.OldList.prependToAll
                                 @ [GHC.Types.Char]
                                 InshiNoHeya.prettyPrint2
                                 xs1))
                           InshiNoHeya.prettyPrint3 })) -}
32b0d6ec46a6a1894b9cecde45ef9ea7
  prettyPrint2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " | "#) -}
a2bc981cb8c7b22d8c1da6da72f0012b
  prettyPrint3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " |"#) -}
17821af1901b44344dd576171364436b
  prettyPrint4 :: [GHC.Types.Char]
  {- Unfolding: (case InshiNoHeya.$wxs1 5 of wild {
                   []
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        (GHC.Types.[] @ GHC.Types.Char)
                        InshiNoHeya.prettyPrint5
                   : ds1 xs
                   -> GHC.Base.++ @ GHC.Types.Char xs InshiNoHeya.prettyPrint5 }) -}
3ac6383aa8b3be3c1f6fb0b25944a2e2
  prettyPrint5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " \n"#) -}
6c17591000b946d0cf781926f5abb4d2
  prettyPrint_divider :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   " \n\
                   \ "#
                   InshiNoHeya.prettyPrint4) -}
e4f38b9b9a8fd04e77d9189bcb62082e
  rooms :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms78
                   InshiNoHeya.rooms1) -}
e6c3c7d0675379b28e7b3856aa3cf55c
  rooms1 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms73
                   InshiNoHeya.rooms2) -}
f52248ce15d0e78ac02ebdeeebf529a9
  rooms10 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms20
                   InshiNoHeya.rooms11) -}
0c44cf0362613b5b339f61b478b19f0c
  rooms11 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms12
                   (GHC.Types.[] @ InshiNoHeya.Room)) -}
1fe8f559d567476e1fba94df819ac6f3
  rooms12 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms14
                   InshiNoHeya.rooms13) -}
5a090e84d09fcda0154567fe639c3871
  rooms13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 10) -}
bf3316f7ed97b5ce76da15d747804a6b
  rooms14 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms18
                   InshiNoHeya.rooms15) -}
bfda3a56192424b5c824c87cf1f6804f
  rooms15 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms16
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
93c9daef77c3504053e1760052a3d160
  rooms16 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms17, InshiNoHeya.rooms17)) -}
6e98be8ca6b41939ddf6173d0c35d3df
  rooms17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5) -}
1ea9a81d160e6d0d98c261af92255809
  rooms18 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms19, InshiNoHeya.rooms17)) -}
917ca18bff29c8c699f47fa19be81c8c
  rooms19 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4) -}
ac51eb0907199740031f5ea1d463db41
  rooms2 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms70
                   InshiNoHeya.rooms3) -}
5fd2d0334fd0541d57ac7968b97363e5
  rooms20 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms22
                   InshiNoHeya.rooms21) -}
973bf6a61b03ba8fdab2411cb2265158
  rooms21 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 15) -}
d6968661a8a762ae0be8789f29e98ff7
  rooms22 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms25
                   InshiNoHeya.rooms23) -}
84b99677a0b14863a586708ba2e4fe91
  rooms23 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms24
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
f76e93d7c7129778debb26999605e1d0
  rooms24 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms17, InshiNoHeya.rooms19)) -}
b050d88b0ce066d890da9f9bcb60988f
  rooms25 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms19, InshiNoHeya.rooms19)) -}
34ce4f3fd27354351652a13afc0bd643
  rooms26 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms28
                   InshiNoHeya.rooms27) -}
616d2c207feed7f71771c01250fc1761
  rooms27 :: InshiNoHeya.Value
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1) -}
64ba8243674a406f3b7dbed9a5fe7e02
  rooms28 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms29
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
5bfcb8b5ed00a2d1636ae26a16ca3582
  rooms29 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms30, InshiNoHeya.rooms17)) -}
73cd5975428154c4ec8348b80ec9ca59
  rooms3 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms62
                   InshiNoHeya.rooms4) -}
86a917bed069728efa3ec62d8b3dbcf9
  rooms30 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2) -}
cfa2a0eb70a5479d67c609da73c7b592
  rooms31 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms32
                   InshiNoHeya.rooms19) -}
8845eaf1452a2c27932e5ec936e0f235
  rooms32 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms35
                   InshiNoHeya.rooms33) -}
0864080f71b36306a23939b99d918cec
  rooms33 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms34
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
d7033a19e7e95ce669e7ae45574220c4
  rooms34 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms27, InshiNoHeya.rooms17)) -}
9292ae862ebae9557a3a19e312f7f2f4
  rooms35 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms27, InshiNoHeya.rooms19)) -}
51b185bcb4552a53f6050f8f4e26dbdd
  rooms36 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms38
                   InshiNoHeya.rooms37) -}
b2f5beb6039b2f43ba74d87a194137db
  rooms37 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6) -}
386394779291969c395a83b25fd153c2
  rooms38 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms44
                   InshiNoHeya.rooms39) -}
31ea27d160d34e337c086cab6da84063
  rooms39 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms43
                   InshiNoHeya.rooms40) -}
16c1394e9ed57ad1dd685fe4f85cad8a
  rooms4 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms56
                   InshiNoHeya.rooms5) -}
3187d60ea538cd41fd99490276825954
  rooms40 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms41
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
92c9669584e9f5260c8253e2e1f50cab
  rooms41 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms42, InshiNoHeya.rooms17)) -}
14238c5feffbaa54655362fdd1cad6f1
  rooms42 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3) -}
fef384298a5f265297af8c0da98e64c7
  rooms43 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms42, InshiNoHeya.rooms19)) -}
51b586ea3221a6859b6f895101e57a11
  rooms44 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms42, InshiNoHeya.rooms42)) -}
1e9b64e25a7135fc312bd29c9b50c67c
  rooms45 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms46
                   InshiNoHeya.rooms13) -}
4b6ea41c0a98ddd8ededb74d1900639e
  rooms46 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms49
                   InshiNoHeya.rooms47) -}
baa7c34e3cc2095c39bb12ed95f75fac
  rooms47 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms48
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
3e4ebf4f1eafaac9488790e8e3c559db
  rooms48 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms30, InshiNoHeya.rooms42)) -}
c45647e385c6d31e7a2992d260c10fb0
  rooms49 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms27, InshiNoHeya.rooms42)) -}
e72238456315ea4b91718e6a273b627f
  rooms5 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms50
                   InshiNoHeya.rooms6) -}
0fd0c5c4acd24f6a6c603bb5b827cd75
  rooms50 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms52
                   InshiNoHeya.rooms51) -}
1848cc069743b2160004ee2f69c9706f
  rooms51 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8) -}
6a108a16e342eebd0462b61c93f1daa6
  rooms52 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms55
                   InshiNoHeya.rooms53) -}
9c817e3e172efddb728589028de79545
  rooms53 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms54
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
f1c3441a270a7ca3dad21835351eedcc
  rooms54 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms19, InshiNoHeya.rooms42)) -}
9ef84a3bc269c613d8a6dcb6777844cf
  rooms55 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms19, InshiNoHeya.rooms30)) -}
819b638e61ffc4c4c668d6eb76173848
  rooms56 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms58
                   InshiNoHeya.rooms57) -}
4395c9ded14b55d9ffc5c36169eb95c5
  rooms57 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 20) -}
2e2c05f4cc7aa579a427f6196a9fc311
  rooms58 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms61
                   InshiNoHeya.rooms59) -}
47bebeadd72487a458f5952b158f989e
  rooms59 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms60
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
65383018d8bb84efca8e1a807144e729
  rooms6 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms45
                   InshiNoHeya.rooms7) -}
f3f5bbfafdbbaebb22ce0d6548054d02
  rooms60 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms42, InshiNoHeya.rooms30)) -}
5971332d2ab3bf0a0f0661d2f6910202
  rooms61 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms30, InshiNoHeya.rooms30)) -}
238d68cc64f5854b0f26dd77716bfae1
  rooms62 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms64
                   InshiNoHeya.rooms63) -}
b9d0a767a57c335ee71e074a1e9171b9
  rooms63 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 12) -}
3f2543ce9b5811bcdaef884b60c0439a
  rooms64 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms69
                   InshiNoHeya.rooms65) -}
51a485427b83048caa99c21a01ef5245
  rooms65 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms68
                   InshiNoHeya.rooms66) -}
bc1523adbaa1ba478213cff863a42df4
  rooms66 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms67
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
e5066b21062b5b4cd19d98042e278de9
  rooms67 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms17, InshiNoHeya.rooms42)) -}
d1e85d19c841067b6f41fe0ef584bb73
  rooms68 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms17, InshiNoHeya.rooms30)) -}
286b3f79070b1efaa0e3aa43c8169196
  rooms69 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms17, InshiNoHeya.rooms27)) -}
693f947ee31d99958d45beef6009e52a
  rooms7 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms36
                   InshiNoHeya.rooms8) -}
4c630a1ad1970fa351f63509664285b7
  rooms70 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms71
                   InshiNoHeya.rooms27) -}
c895ce0cbb4f8294c80e223f90cc56f9
  rooms71 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms72
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
d8d859cda336765a361ea27f457d5f2d
  rooms72 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms19, InshiNoHeya.rooms27)) -}
c2b5e755cc2d80ee844e5b735b2d2221
  rooms73 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms74
                   InshiNoHeya.rooms21) -}
fd13acc88e21f6804fb1ca87a7f9ffae
  rooms74 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms77
                   InshiNoHeya.rooms75) -}
847ac3bc39e04383ad2a18df3edc4554
  rooms75 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms76
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
19c6d2ae23e5aaf99cb17fd39ce8ff99
  rooms76 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms42, InshiNoHeya.rooms27)) -}
dda0205412be1e50a40e85df00a401c8
  rooms77 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms30, InshiNoHeya.rooms27)) -}
bee8d9d0846cc681283d98475313af59
  rooms78 :: InshiNoHeya.Room
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (InshiNoHeya.Room
                   InshiNoHeya.rooms79
                   InshiNoHeya.rooms37) -}
668115df0583df4c3bd1bc3c8efd8bc1
  rooms79 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms82
                   InshiNoHeya.rooms80) -}
1d5fbedde38513e216ce634bfa087218
  rooms8 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms31
                   InshiNoHeya.rooms9) -}
e58f66afc4b68a9df29e4bde2136fb3f
  rooms80 :: [(InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate)
                   InshiNoHeya.rooms81
                   (GHC.Types.[]
                      @ (InshiNoHeya.Coordinate, InshiNoHeya.Coordinate))) -}
bef6a85306f63ea1d6e76c882d89da85
  rooms81 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms27, InshiNoHeya.rooms30)) -}
54bdac24f432ac88205c364083fde3df
  rooms82 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((InshiNoHeya.rooms27, InshiNoHeya.rooms27)) -}
882646ada29a63891ad14802f005cc14
  rooms9 :: [InshiNoHeya.Room]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ InshiNoHeya.Room
                   InshiNoHeya.rooms26
                   InshiNoHeya.rooms10) -}
1d23b7bc37f222df83dd2fd27701be04
  valid :: InshiNoHeya.Puzzle -> InshiNoHeya.R
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True) InshiNoHeya.checkPuzzle -}
instance GHC.Classes.Eq [InshiNoHeya.Room] = InshiNoHeya.$fEqRoom
instance GHC.Show.Show [InshiNoHeya.Room] = InshiNoHeya.$fShowRoom
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

