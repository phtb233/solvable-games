
==================== FINAL INTERFACE ====================
2016-08-20 20:56:16.791496 UTC

interface main@main:FoxGooseBeans 7103
  interface hash: 74a35b5e2cc2df885b0e7a1ba7fd63ff
  ABI hash: 6a36a40e2566276774c65376d68a0743
  export-list hash: d1e4775ff6c9de9dcaf05b662a505f2d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 00e643ad7ce35edfdec2c9358b896e07
  sig of: Nothing
  used TH splices: False
  where
exports:
  FoxGooseBeans.addGood
  FoxGooseBeans.epsilons
  FoxGooseBeans.isOn
  FoxGooseBeans.lose
  FoxGooseBeans.main
  FoxGooseBeans.moves
  FoxGooseBeans.movesToBanks
  FoxGooseBeans.optimalPlay
  FoxGooseBeans.p
  FoxGooseBeans.removeGood
  FoxGooseBeans.shortenOutcome
  FoxGooseBeans.transferGoods
  FoxGooseBeans.wins
  FoxGooseBeans.Banks
  FoxGooseBeans.Goods{FoxGooseBeans.Beans FoxGooseBeans.Fox FoxGooseBeans.Goose}
  FoxGooseBeans.Move
  FoxGooseBeans.R
  FoxGooseBeans.Side
module dependencies: Logic.GameLogic
package dependencies: base-4.8.2.0 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  Logic.GameLogic 26d44f799309be9333aa831cc195f912
  exports: 02a96d8251ab1656b811a49d270bd213
  J e62c617d76644dc2a111453607a27a3f
  bigotimes 344a9cb8123787eadef3d179968b7b85
  find 33d0a3fefbb5a1953b62f96514263af8
58a1ce67a8a2359872956f14cce91307
  $fEqGoods :: GHC.Classes.Eq FoxGooseBeans.Goods
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ FoxGooseBeans.Goods
                  FoxGooseBeans.$fEqGoods_$c==
                  FoxGooseBeans.$fEqGoods_$c/= -}
58a1ce67a8a2359872956f14cce91307
  $fEqGoods_$c/= ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a3 :: FoxGooseBeans.Goods b :: FoxGooseBeans.Goods ->
                 case a3 of wild {
                   FoxGooseBeans.Fox
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True FoxGooseBeans.Fox -> GHC.Types.False }
                   FoxGooseBeans.Goose
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True FoxGooseBeans.Goose -> GHC.Types.False }
                   FoxGooseBeans.Beans
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        FoxGooseBeans.Beans -> GHC.Types.False } }) -}
58a1ce67a8a2359872956f14cce91307
  $fEqGoods_$c== ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: FoxGooseBeans.Goods ds1 :: FoxGooseBeans.Goods ->
                 case ds of wild {
                   FoxGooseBeans.Fox
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False FoxGooseBeans.Fox -> GHC.Types.True }
                   FoxGooseBeans.Goose
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False FoxGooseBeans.Goose -> GHC.Types.True }
                   FoxGooseBeans.Beans
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        FoxGooseBeans.Beans -> GHC.Types.True } }) -}
58a1ce67a8a2359872956f14cce91307
  $fOrdGoods :: GHC.Classes.Ord FoxGooseBeans.Goods
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ FoxGooseBeans.Goods
                  FoxGooseBeans.$fEqGoods
                  FoxGooseBeans.$fOrdGoods_$ccompare
                  FoxGooseBeans.$fOrdGoods_$c<
                  FoxGooseBeans.$fOrdGoods_$c<=
                  FoxGooseBeans.$fOrdGoods_$c>
                  FoxGooseBeans.$fOrdGoods_$c>=
                  FoxGooseBeans.$fOrdGoods_$cmax
                  FoxGooseBeans.$fOrdGoods_$cmin -}
58a1ce67a8a2359872956f14cce91307
  $fOrdGoods_$c< ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a3 :: FoxGooseBeans.Goods b :: FoxGooseBeans.Goods ->
                 case a3 of wild {
                   FoxGooseBeans.Fox
                   -> case b of wild1 {
                        FoxGooseBeans.Fox -> GHC.Types.False
                        FoxGooseBeans.Goose -> GHC.Types.True
                        FoxGooseBeans.Beans -> GHC.Types.True }
                   FoxGooseBeans.Goose
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False FoxGooseBeans.Beans -> GHC.Types.True }
                   FoxGooseBeans.Beans
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
58a1ce67a8a2359872956f14cce91307
  $fOrdGoods_$c<= ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a3 :: FoxGooseBeans.Goods b :: FoxGooseBeans.Goods ->
                 case a3 of wild {
                   FoxGooseBeans.Fox -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   FoxGooseBeans.Goose
                   -> case b of wild1 {
                        FoxGooseBeans.Fox -> GHC.Types.False
                        FoxGooseBeans.Goose -> GHC.Types.True
                        FoxGooseBeans.Beans -> GHC.Types.True }
                   FoxGooseBeans.Beans
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        FoxGooseBeans.Beans -> GHC.Types.True } }) -}
58a1ce67a8a2359872956f14cce91307
  $fOrdGoods_$c> ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a3 :: FoxGooseBeans.Goods b :: FoxGooseBeans.Goods ->
                 case a3 of wild {
                   FoxGooseBeans.Fox -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   FoxGooseBeans.Goose
                   -> case b of wild1 {
                        FoxGooseBeans.Fox -> GHC.Types.True
                        FoxGooseBeans.Goose -> GHC.Types.False
                        FoxGooseBeans.Beans -> GHC.Types.False }
                   FoxGooseBeans.Beans
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        FoxGooseBeans.Beans -> GHC.Types.False } }) -}
58a1ce67a8a2359872956f14cce91307
  $fOrdGoods_$c>= ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a3 :: FoxGooseBeans.Goods b :: FoxGooseBeans.Goods ->
                 case a3 of wild {
                   FoxGooseBeans.Fox
                   -> case b of wild1 {
                        FoxGooseBeans.Fox -> GHC.Types.True
                        FoxGooseBeans.Goose -> GHC.Types.False
                        FoxGooseBeans.Beans -> GHC.Types.False }
                   FoxGooseBeans.Goose
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True FoxGooseBeans.Beans -> GHC.Types.False }
                   FoxGooseBeans.Beans
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
58a1ce67a8a2359872956f14cce91307
  $fOrdGoods_$ccompare ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a3 :: FoxGooseBeans.Goods b :: FoxGooseBeans.Goods ->
                 case a3 of wild {
                   FoxGooseBeans.Fox
                   -> case b of wild1 {
                        FoxGooseBeans.Fox -> GHC.Types.EQ
                        FoxGooseBeans.Goose -> GHC.Types.LT
                        FoxGooseBeans.Beans -> GHC.Types.LT }
                   FoxGooseBeans.Goose
                   -> case b of wild1 {
                        FoxGooseBeans.Fox -> GHC.Types.GT
                        FoxGooseBeans.Goose -> GHC.Types.EQ
                        FoxGooseBeans.Beans -> GHC.Types.LT }
                   FoxGooseBeans.Beans
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT FoxGooseBeans.Beans -> GHC.Types.EQ } }) -}
58a1ce67a8a2359872956f14cce91307
  $fOrdGoods_$cmax ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> FoxGooseBeans.Goods
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x1 :: FoxGooseBeans.Goods y :: FoxGooseBeans.Goods ->
                 case x1 of wild {
                   FoxGooseBeans.Fox -> y
                   FoxGooseBeans.Goose
                   -> case y of wild1 {
                        DEFAULT -> FoxGooseBeans.Goose
                        FoxGooseBeans.Beans -> FoxGooseBeans.Beans }
                   FoxGooseBeans.Beans
                   -> case y of wild1 { DEFAULT -> FoxGooseBeans.Beans } }) -}
58a1ce67a8a2359872956f14cce91307
  $fOrdGoods_$cmin ::
    FoxGooseBeans.Goods -> FoxGooseBeans.Goods -> FoxGooseBeans.Goods
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x1 :: FoxGooseBeans.Goods y :: FoxGooseBeans.Goods ->
                 case x1 of wild {
                   FoxGooseBeans.Fox
                   -> case y of wild1 { DEFAULT -> FoxGooseBeans.Fox }
                   FoxGooseBeans.Goose
                   -> case y of wild1 {
                        FoxGooseBeans.Fox -> FoxGooseBeans.Fox
                        FoxGooseBeans.Goose -> FoxGooseBeans.Goose
                        FoxGooseBeans.Beans -> FoxGooseBeans.Goose }
                   FoxGooseBeans.Beans -> y }) -}
58a1ce67a8a2359872956f14cce91307
  $fShowGoods :: GHC.Show.Show FoxGooseBeans.Goods
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ FoxGooseBeans.Goods
                  FoxGooseBeans.$fShowGoods_$cshowsPrec
                  FoxGooseBeans.$fShowGoods_$cshow
                  FoxGooseBeans.$fShowGoods_$cshowList -}
10fd2bd41cfdad46731974dee32b807b
  $fShowGoods1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Beans"#) -}
be595a0d0f5e524e11ef83f929d5adba
  $fShowGoods2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Goose"#) -}
5d9e79ad1d80aa9fcf17e4be20bf2294
  $fShowGoods3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Fox"#) -}
58a1ce67a8a2359872956f14cce91307
  $fShowGoods_$cshow :: FoxGooseBeans.Goods -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x1 :: FoxGooseBeans.Goods ->
                 case x1 of wild {
                   FoxGooseBeans.Fox -> FoxGooseBeans.$fShowGoods3
                   FoxGooseBeans.Goose -> FoxGooseBeans.$fShowGoods2
                   FoxGooseBeans.Beans -> FoxGooseBeans.$fShowGoods1 }) -}
58a1ce67a8a2359872956f14cce91307
  $fShowGoods_$cshowList :: [FoxGooseBeans.Goods] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ FoxGooseBeans.Goods
                   FoxGooseBeans.$w$cshowsPrec) -}
58a1ce67a8a2359872956f14cce91307
  $fShowGoods_$cshowsPrec ::
    GHC.Types.Int -> FoxGooseBeans.Goods -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: FoxGooseBeans.Goods
                   w2 :: GHC.Base.String ->
                 FoxGooseBeans.$w$cshowsPrec w1 w2) -}
898f472bd1f715d42c9ff7ecbcb235f9
  $s$fOrd(,)_$s$fOrdMaybe_$ccompare ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Base.Maybe FoxGooseBeans.Goods -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a3 :: GHC.Base.Maybe FoxGooseBeans.Goods
                   b :: GHC.Base.Maybe FoxGooseBeans.Goods ->
                 case a3 of wild {
                   GHC.Base.Nothing
                   -> case b of wild1 {
                        GHC.Base.Nothing -> GHC.Types.EQ
                        GHC.Base.Just ipv -> GHC.Types.LT }
                   GHC.Base.Just a4
                   -> case b of wild1 {
                        GHC.Base.Nothing -> GHC.Types.GT
                        GHC.Base.Just b1
                        -> FoxGooseBeans.$fOrdGoods_$ccompare a4 b1 } }) -}
58a1ce67a8a2359872956f14cce91307
  $w$cshowsPrec ::
    FoxGooseBeans.Goods -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: FoxGooseBeans.Goods w1 :: GHC.Base.String ->
                 case w of wild {
                   FoxGooseBeans.Fox
                   -> GHC.Base.++ @ GHC.Types.Char FoxGooseBeans.$fShowGoods3 w1
                   FoxGooseBeans.Goose
                   -> GHC.Base.++ @ GHC.Types.Char FoxGooseBeans.$fShowGoods2 w1
                   FoxGooseBeans.Beans
                   -> GHC.Base.++ @ GHC.Types.Char FoxGooseBeans.$fShowGoods1 w1 }) -}
b32782b00c649c8a4b80a87e4f4f8f32
  $wisOn ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ w :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww1 :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww2 :: GHC.Base.Maybe FoxGooseBeans.Goods ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ w1 :: GHC.Prim.Void#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Void# -> GHC.Types.Bool
                         {- Arity: 1, Strictness: <L,A> -}
                       = \ w2 :: GHC.Prim.Void#[OneShot] ->
                         case w of wild {
                           GHC.Base.Nothing
                           -> case ww2 of wild1 {
                                GHC.Base.Nothing -> GHC.Types.True
                                GHC.Base.Just ipv -> GHC.Types.False }
                           GHC.Base.Just a3
                           -> case ww2 of wild1 {
                                GHC.Base.Nothing -> GHC.Types.False
                                GHC.Base.Just b1 -> FoxGooseBeans.$fEqGoods_$c== a3 b1 } }
                     } in
                     case w of wild {
                       GHC.Base.Nothing
                       -> case ww1 of wild1 {
                            GHC.Base.Nothing -> GHC.Types.True
                            GHC.Base.Just ipv -> $j1 GHC.Prim.void# }
                       GHC.Base.Just a3
                       -> case ww1 of wild1 {
                            GHC.Base.Nothing -> $j1 GHC.Prim.void#
                            GHC.Base.Just b1
                            -> case a3 of wild2 {
                                 FoxGooseBeans.Fox
                                 -> case b1 of wild3 {
                                      DEFAULT -> $j1 GHC.Prim.void#
                                      FoxGooseBeans.Fox -> GHC.Types.True }
                                 FoxGooseBeans.Goose
                                 -> case b1 of wild3 {
                                      DEFAULT -> $j1 GHC.Prim.void#
                                      FoxGooseBeans.Goose -> GHC.Types.True }
                                 FoxGooseBeans.Beans
                                 -> case b1 of wild3 {
                                      DEFAULT -> $j1 GHC.Prim.void#
                                      FoxGooseBeans.Beans -> GHC.Types.True } } } }
                 } in
                 case w of wild {
                   GHC.Base.Nothing
                   -> case ww of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just ipv -> $j GHC.Prim.void# }
                   GHC.Base.Just a3
                   -> case ww of wild1 {
                        GHC.Base.Nothing -> $j GHC.Prim.void#
                        GHC.Base.Just b1
                        -> case a3 of wild2 {
                             FoxGooseBeans.Fox
                             -> case b1 of wild3 {
                                  DEFAULT -> $j GHC.Prim.void# FoxGooseBeans.Fox -> GHC.Types.True }
                             FoxGooseBeans.Goose
                             -> case b1 of wild3 {
                                  DEFAULT -> $j GHC.Prim.void#
                                  FoxGooseBeans.Goose -> GHC.Types.True }
                             FoxGooseBeans.Beans
                             -> case b1 of wild3 {
                                  DEFAULT -> $j GHC.Prim.void#
                                  FoxGooseBeans.Beans -> GHC.Types.True } } } }) -}
2e813d70abd42f09ffdb06accf71aec7
  $wlose ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww1 :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww2 :: GHC.Base.Maybe FoxGooseBeans.Goods ->
                 case ww of wild {
                   GHC.Base.Nothing
                   -> case ww1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just ds
                        -> case ds of wild2 {
                             DEFAULT -> GHC.Types.False
                             FoxGooseBeans.Goose
                             -> case ww2 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just ds1
                                  -> case ds1 of wild4 {
                                       DEFAULT -> GHC.Types.False
                                       FoxGooseBeans.Beans -> GHC.Types.True } } } }
                   GHC.Base.Just ds
                   -> case ds of wild1 {
                        DEFAULT
                        -> case ww1 of wild2 {
                             GHC.Base.Nothing -> GHC.Types.False
                             GHC.Base.Just ds1
                             -> case ds1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  FoxGooseBeans.Goose
                                  -> case ww2 of wild4 {
                                       GHC.Base.Nothing -> GHC.Types.False
                                       GHC.Base.Just ds2
                                       -> case ds2 of wild5 {
                                            DEFAULT -> GHC.Types.False
                                            FoxGooseBeans.Beans -> GHC.Types.True } } } }
                        FoxGooseBeans.Fox
                        -> case ww1 of wild2 {
                             GHC.Base.Nothing -> GHC.Types.False
                             GHC.Base.Just ds1
                             -> case ds1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  FoxGooseBeans.Goose -> GHC.Types.True } } } }) -}
0f8176d720ffbdff8d23d62cfa4da817
  $wmtb ::
    [FoxGooseBeans.Move]
    -> FoxGooseBeans.Side
    -> FoxGooseBeans.Side
    -> (# FoxGooseBeans.Side, FoxGooseBeans.Side #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,U(U,U,U)><L,U(U,U,U)>, Inline: [0] -}
430485228ac35de67c411e94f2f6eba9
  $wtransferGoods ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> FoxGooseBeans.Side
    -> FoxGooseBeans.Side
    -> (# FoxGooseBeans.Side, FoxGooseBeans.Side #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,U(U,U,U)><L,U(U,U,U)>, Inline: [0],
     Unfolding: (\ w :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww :: FoxGooseBeans.Side
                   ww1 :: FoxGooseBeans.Side ->
                 case w of wild {
                   GHC.Base.Nothing -> (# ww, ww1 #)
                   GHC.Base.Just ipv
                   -> case ww of ww2 { (,,) ww3 ww4 ww5 ->
                      case FoxGooseBeans.$wisOn wild ww3 ww4 ww5 of wild1 {
                        GHC.Types.False -> (# ww2, ww1 #)
                        GHC.Types.True
                        -> (# case ipv of wild2 {
                                FoxGooseBeans.Fox
                                -> (GHC.Base.Nothing @ FoxGooseBeans.Goods, ww4, ww5)
                                FoxGooseBeans.Goose
                                -> (ww3, GHC.Base.Nothing @ FoxGooseBeans.Goods, ww5)
                                FoxGooseBeans.Beans
                                -> (ww3, ww4, GHC.Base.Nothing @ FoxGooseBeans.Goods) },
                              case ipv of wild2 {
                                FoxGooseBeans.Fox
                                -> case ww1 of wild3 { (,,) a3 b c ->
                                   (FoxGooseBeans.addGood3, b, c) }
                                FoxGooseBeans.Goose
                                -> case ww1 of wild3 { (,,) a3 b c ->
                                   (a3, FoxGooseBeans.addGood2, c) }
                                FoxGooseBeans.Beans
                                -> case ww1 of wild3 { (,,) a3 b c ->
                                   (a3, b, FoxGooseBeans.addGood1) } } #) } } }) -}
3c5448dec4a46bcbe40f966b12cbb873
  $wwins ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Base.Maybe FoxGooseBeans.Goods
    -> GHC.Base.Maybe FoxGooseBeans.Goods
    -> FoxGooseBeans.Side
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U(1*U,1*U,1*U)>, Inline: [0],
     Unfolding: (\ ww :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww1 :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww2 :: GHC.Base.Maybe FoxGooseBeans.Goods
                   ww3 :: FoxGooseBeans.Side ->
                 case ww of wild {
                   GHC.Base.Nothing
                   -> case ww1 of wild1 {
                        GHC.Base.Nothing
                        -> case ww2 of wild2 {
                             GHC.Base.Nothing
                             -> case ww3 of wild3 { (,,) ds ds1 ds2 ->
                                case ds of wild4 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just ds3
                                  -> case ds3 of wild5 {
                                       DEFAULT -> GHC.Types.False
                                       FoxGooseBeans.Fox
                                       -> case ds1 of wild6 {
                                            GHC.Base.Nothing -> GHC.Types.False
                                            GHC.Base.Just ds4
                                            -> case ds4 of wild7 {
                                                 DEFAULT -> GHC.Types.False
                                                 FoxGooseBeans.Goose
                                                 -> case ds2 of wild8 {
                                                      GHC.Base.Nothing -> GHC.Types.False
                                                      GHC.Base.Just ds5
                                                      -> case ds5 of wild9 {
                                                           DEFAULT -> GHC.Types.False
                                                           FoxGooseBeans.Beans
                                                           -> GHC.Types.True } } } } } } }
                             GHC.Base.Just ipv -> GHC.Types.False }
                        GHC.Base.Just ipv -> GHC.Types.False }
                   GHC.Base.Just ipv -> GHC.Types.False }) -}
84c1ec0d92a0ba3bf91c26f08cd6a14e
  $wxs ::
    GHC.Prim.Int#
    -> (# [FoxGooseBeans.Move]
          -> Logic.GameLogic.J FoxGooseBeans.R FoxGooseBeans.Move,
          [[FoxGooseBeans.Move]
           -> Logic.GameLogic.J FoxGooseBeans.R FoxGooseBeans.Move] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
31abed8f2b586f5b60e0a975d9dc800b
  type Banks = (FoxGooseBeans.Side, FoxGooseBeans.Side)
58a1ce67a8a2359872956f14cce91307
  data Goods = Fox | Goose | Beans
    Promotable
774a62f461bdc7515a4d6f6d7a0f2e58
  type Move =
    (GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods)
3caf87ee607a8999b3ea394c8f6e2315
  type R = GHC.Types.Bool
fb56ac459d8fbb7eac527b9a1175a54f
  type Side =
    (GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods)
e03a47f045d4d98fbb708808a8a1e8cd
  addGood ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> FoxGooseBeans.Side -> FoxGooseBeans.Side
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U(U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Base.Maybe FoxGooseBeans.Goods
                   w1 :: FoxGooseBeans.Side ->
                 case w1 of ww { (,,) ww1 ww2 ww3 ->
                 case w of wild {
                   GHC.Base.Nothing -> (ww1, ww2, ww3)
                   GHC.Base.Just ds
                   -> case ds of wild1 {
                        FoxGooseBeans.Fox -> (FoxGooseBeans.addGood3, ww2, ww3)
                        FoxGooseBeans.Goose -> (ww1, FoxGooseBeans.addGood2, ww3)
                        FoxGooseBeans.Beans -> (ww1, ww2, FoxGooseBeans.addGood1) } } }) -}
e8d9389e8d763e8169e8530ec4f2f5b9
  addGood1 :: GHC.Base.Maybe FoxGooseBeans.Goods
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ FoxGooseBeans.Goods
                   FoxGooseBeans.Beans) -}
ad65eae0140d70b8c70bc9958c4026d1
  addGood2 :: GHC.Base.Maybe FoxGooseBeans.Goods
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ FoxGooseBeans.Goods
                   FoxGooseBeans.Goose) -}
d99c8cf615d5ea2b48a157ee8e038cde
  addGood3 :: GHC.Base.Maybe FoxGooseBeans.Goods
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ FoxGooseBeans.Goods
                   FoxGooseBeans.Fox) -}
c8ad1471319d8371b4da1cea261b4341
  epsilons ::
    [[FoxGooseBeans.Move]
     -> Logic.GameLogic.J FoxGooseBeans.R FoxGooseBeans.Move]
  {- Unfolding: (case FoxGooseBeans.$wxs 10 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ ([FoxGooseBeans.Move]
                      -> Logic.GameLogic.J FoxGooseBeans.R FoxGooseBeans.Move)
                   ww1
                   ww2 }) -}
76834cb0911c75fb217c525c930f0c8d
  isOn ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> FoxGooseBeans.Side -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,U><S(SLL),1*U(1*U,1*U,1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Base.Maybe FoxGooseBeans.Goods
                   w1 :: FoxGooseBeans.Side ->
                 case w1 of ww { (,,) ww1 ww2 ww3 ->
                 FoxGooseBeans.$wisOn w ww1 ww2 ww3 }) -}
381487872bfb91f213a2f395f82600f0
  lose :: FoxGooseBeans.Side -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SSL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: FoxGooseBeans.Side ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 FoxGooseBeans.$wlose ww1 ww2 ww3 }) -}
94ec2cbea60e9ac3b5470e8b886677e7
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                FoxGooseBeans.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
068a0f704dbe0696feb6b02438c92b21
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        FoxGooseBeans.main9
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case FoxGooseBeans.main8
                        FoxGooseBeans.optimalPlay
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        FoxGooseBeans.main7
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 FoxGooseBeans.main6 FoxGooseBeans.main2 ipv4 } } }) -}
9361a839553cabddb0af61a82f6ca48e
  main2 ::
    [(GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods)]
  {- Unfolding: (FoxGooseBeans.main_shorten
                   FoxGooseBeans.optimalPlay
                   FoxGooseBeans.main3) -}
f42abd53169da1d55a26d9ab1aae8fe0
  main3 ::
    ((GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods),
     (GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((FoxGooseBeans.main5, FoxGooseBeans.main4)) -}
ea93c4764bd328f9a790f604e5918b50
  main4 ::
    (GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Base.Nothing @ FoxGooseBeans.Goods,
                  GHC.Base.Nothing @ FoxGooseBeans.Goods,
                  GHC.Base.Nothing @ FoxGooseBeans.Goods)) -}
ceca39a6673b1575ec9e5ead3b3d4d5a
  main5 ::
    (GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((FoxGooseBeans.addGood3,
                  FoxGooseBeans.addGood2,
                  FoxGooseBeans.addGood1)) -}
3e73063c95623a511c13c21951d15371
  main6 ::
    [FoxGooseBeans.Move]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
40f3dc5d4afe4ad45cabb79c19922104
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Shortened play : "#) -}
0ed60947caadf626e88c3c3aa3be7adb
  main8 ::
    [FoxGooseBeans.Move]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
e3622646a88795245070142a97eb2cdb
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Optimal play : "#) -}
0fabe67fb15141fac7524b88aed78b11
  main_shorten ::
    [(GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods)]
    -> (FoxGooseBeans.Side, FoxGooseBeans.Side)
    -> [(GHC.Base.Maybe FoxGooseBeans.Goods,
         GHC.Base.Maybe FoxGooseBeans.Goods)]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U(U,U,U),U(U,U,U))> -}
2aa6523ac038235178ebc34f84724b4e
  moves ::
    [(GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe FoxGooseBeans.Goods,
                      GHC.Base.Maybe FoxGooseBeans.Goods)
                   FoxGooseBeans.moves4
                   FoxGooseBeans.moves1) -}
2ae4ac1418280ca162550d94199f1ae5
  moves1 ::
    [(GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe FoxGooseBeans.Goods,
                      GHC.Base.Maybe FoxGooseBeans.Goods)
                   FoxGooseBeans.moves6
                   FoxGooseBeans.moves2) -}
ebafaab18ad86f7ff9a438d026b986af
  moves2 ::
    [(GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe FoxGooseBeans.Goods,
                      GHC.Base.Maybe FoxGooseBeans.Goods)
                   FoxGooseBeans.moves5
                   FoxGooseBeans.moves3) -}
059ef68b04e6542b10cba8255a75d5ab
  moves3 ::
    [(GHC.Base.Maybe FoxGooseBeans.Goods,
      GHC.Base.Maybe FoxGooseBeans.Goods)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe FoxGooseBeans.Goods,
                      GHC.Base.Maybe FoxGooseBeans.Goods)
                   FoxGooseBeans.moves4
                   (GHC.Types.[]
                      @ (GHC.Base.Maybe FoxGooseBeans.Goods,
                         GHC.Base.Maybe FoxGooseBeans.Goods))) -}
bda6032c923170a70d4da0503f64124a
  moves4 ::
    (GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((FoxGooseBeans.addGood2,
                  GHC.Base.Nothing @ FoxGooseBeans.Goods)) -}
21e26f588f27199a977a22f4f56be1b0
  moves5 ::
    (GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((FoxGooseBeans.addGood1,
                  GHC.Base.Nothing @ FoxGooseBeans.Goods)) -}
37b32f81afac3bc310153dce6aea0014
  moves6 ::
    (GHC.Base.Maybe FoxGooseBeans.Goods,
     GHC.Base.Maybe FoxGooseBeans.Goods)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((FoxGooseBeans.addGood3, FoxGooseBeans.addGood2)) -}
1d83cfcef56afd12399c5fd5bdfd972c
  movesToBanks :: [FoxGooseBeans.Move] -> FoxGooseBeans.Banks
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ moves7 :: [FoxGooseBeans.Move] ->
                 FoxGooseBeans.p_mtb moves7 FoxGooseBeans.main3) -}
bd3796e79f2505f39e523df32ed11cba
  optimalPlay :: [FoxGooseBeans.Move]
  {- Unfolding: (FoxGooseBeans.optimalPlay1 FoxGooseBeans.p) -}
8743f0044e39073e069f52692141e167
  optimalPlay1 ::
    Logic.GameLogic.J FoxGooseBeans.R [FoxGooseBeans.Move]
  {- Unfolding: (Logic.GameLogic.bigotimes
                   @ FoxGooseBeans.Move
                   @ FoxGooseBeans.R
                   FoxGooseBeans.epsilons) -}
a8ebc3a816eccd8de215b329d2337c1c
  p :: [FoxGooseBeans.Move] -> FoxGooseBeans.R
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ms :: [FoxGooseBeans.Move] ->
                 FoxGooseBeans.wins (FoxGooseBeans.p_mtb ms FoxGooseBeans.main3)) -}
84df23610a6c5e86df66d46620437aa7
  p_mtb ::
    [FoxGooseBeans.Move] -> FoxGooseBeans.Banks -> FoxGooseBeans.Banks
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U><S,1*U(U(U,U,U),U(U,U,U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: [FoxGooseBeans.Move] w1 :: FoxGooseBeans.Banks ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case FoxGooseBeans.$wmtb w ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
e41c00aab300b9d4e7984149d4ea88f9
  removeGood ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> FoxGooseBeans.Side -> FoxGooseBeans.Side
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U(U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Base.Maybe FoxGooseBeans.Goods
                   w1 :: FoxGooseBeans.Side ->
                 case w1 of ww { (,,) ww1 ww2 ww3 ->
                 case w of wild {
                   GHC.Base.Nothing -> (ww1, ww2, ww3)
                   GHC.Base.Just ds
                   -> case ds of wild1 {
                        FoxGooseBeans.Fox
                        -> (GHC.Base.Nothing @ FoxGooseBeans.Goods, ww2, ww3)
                        FoxGooseBeans.Goose
                        -> (ww1, GHC.Base.Nothing @ FoxGooseBeans.Goods, ww3)
                        FoxGooseBeans.Beans
                        -> (ww1, ww2, GHC.Base.Nothing @ FoxGooseBeans.Goods) } } }) -}
02696e9e55f4d900d6b1e1335bd8e1c2
  shortenOutcome :: [FoxGooseBeans.Move] -> [FoxGooseBeans.Move]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ moves7 :: [FoxGooseBeans.Move] ->
                 FoxGooseBeans.main_shorten moves7 FoxGooseBeans.main3) -}
51b2a680ffe545e89b555790f9e2be67
  transferGoods ::
    GHC.Base.Maybe FoxGooseBeans.Goods
    -> FoxGooseBeans.Banks -> FoxGooseBeans.Banks
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U><S,1*U(U(U,U,U),U(U,U,U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Base.Maybe FoxGooseBeans.Goods
                   w1 :: FoxGooseBeans.Banks ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case FoxGooseBeans.$wtransferGoods
                        w
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
7b9048f7fbeb811adf4b3e4088eb872f
  wins :: FoxGooseBeans.Banks -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SLL)L),1*U(1*U(1*U,1*U,1*U),1*U(1*U,1*U,1*U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: FoxGooseBeans.Banks ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { (,,) ww4 ww5 ww6 ->
                 FoxGooseBeans.$wwins ww4 ww5 ww6 ww2 } }) -}
instance GHC.Classes.Eq [FoxGooseBeans.Goods]
  = FoxGooseBeans.$fEqGoods
instance GHC.Classes.Ord [FoxGooseBeans.Goods]
  = FoxGooseBeans.$fOrdGoods
instance GHC.Show.Show [FoxGooseBeans.Goods]
  = FoxGooseBeans.$fShowGoods
"SPEC/FoxGooseBeans $fOrdMaybe_$ccompare @ Goods" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                            (GHC.Base.Maybe
                                                                               FoxGooseBeans.Goods)
                                                                  $dOrd :: GHC.Classes.Ord
                                                                             FoxGooseBeans.Goods
  GHC.Base.$fOrdMaybe_$ccompare @ FoxGooseBeans.Goods $dEq $dOrd
  = FoxGooseBeans.$s$fOrd(,)_$s$fOrdMaybe_$ccompare
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

