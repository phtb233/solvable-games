
==================== FINAL INTERFACE ====================
2016-09-03 16:27:22.030626 UTC

interface main@main:Main 7103
  interface hash: 86631e996c5b031ce75d823a98737bb3
  ABI hash: 76c6635a3da15460c6ac99543d48dd0c
  export-list hash: 63a3254e3585b391a9f8a6b18715e0d4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 079e1e29e8c90d1d1c9c99175b4f0a90
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.tttPar
  Main.tttSeq
module dependencies: Buchstabensalat ConnectN FoxGooseBeans
                     Futoshiki InshiNoHeya Logic.GameLogic Logic.Utils NQueens
                     NimPencils Nonograms ParSudoku.Sudoku4 ParSudoku.Sudoku6 Sudoku
                     TicTacToe
package dependencies: arithmoi-0.4.2.0@arith_FAxqgFQd9xLHklfP2QDenN
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 parallel-3.2.1.0@paral_BEbrIfHgHtmEpYU5TfKWK9
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  Buchstabensalat 594e9acdb019eb4d0573de8082ade06f
  exports: 029bf765254fcce26abb3c734a80c3fe
import  -/  ConnectN 43e1b752bea14b835a063198e7ad44b7
  exports: 08de2402677dbcd8948970f0b72e10ae
import  -/  FoxGooseBeans 9876752e60ffb14b51713afbfc9d73d5
  exports: bbee0c38f0f849db6b2b5f02183c6d01
import  -/  Futoshiki 8e5a682e848ba6c416fe7eed2ff07004
  exports: 1bb2b32e3994a1c059da388bb01caadf
import  -/  InshiNoHeya bf436990ad763bcaf2cc84e69c13c544
  exports: be04783ebf312e86922ad128743a6d42
import  -/  Logic.GameLogic 26d44f799309be9333aa831cc195f912
  exports: 02a96d8251ab1656b811a49d270bd213
import  -/  NQueens 8270c3d2e61e8e682a820fb72fdabc47
  exports: 0be0056c1da6aabb08d309ca3c264d99
import  -/  NimPencils 0ca447b5054b7e4777f3bb4a8003fbd7
  exports: 4ecc3746044ce11b5935a509bb4918ae
  main 256eba933307869a47d6fb9eaaef03a0
import  -/  Nonograms fc62f40074a3d67cc30f197ae5f9ed79
  exports: 5dbf8b51a6ee2883bf99264adc1f0b94
import  -/  ParSudoku.Sudoku4 4b9ea4dca8d686f7ba3c41e124b6ef14
  exports: da6291cc7e06d14c14ca62a135feb0d3
import  -/  ParSudoku.Sudoku6 1de5e27c9b443bcf817f7677c84e9122
  exports: ab2ca4c9c24025747ad6338211298292
import  -/  Sudoku 6fb5b292516e8a19c7affb6dd85575cb
  exports: 33b6b05ee100b44be4fd1070b867800b
import  -/  TicTacToe 7dc5fdb758e267c75bd03f76d8551315
  exports: 4abbe1b851f7c15fb3ea4a7fd2b3bdca
  main 73f37ec1bf0941fff7fa6341fe5945e0
  optimalPlay 8f0b52e1f8c08854c92d1458f0f8d129
84417600ea1b46878806e08b154af30d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                NimPencils.gameLoop1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
dcff07f641ef481ff6980e45e8655827
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   NimPencils.gameLoop1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
cbc5ef07147ae1dd13834c28aaa26296
  tttPar :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                TicTacToe.getOptimalPlay1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
1f915d835e1b1e9e8f54eb1f71c0b051
  tttSeq :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tttSeq1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
5c2340a3c883b9aa847d131af51383bb
  tttSeq1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Show.$fShow[]_$s$cshow TicTacToe.optimalPlay)
                   GHC.Types.True
                   eta) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

